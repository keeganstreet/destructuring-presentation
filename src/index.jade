doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Destructuring

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section.bg-img(style="background-image:url('images/Mirador-Building-by-MVRDV-and-Blanca-Lleo-photo-Luis-Garcia-by-Axel-de-Stampa.gif');")
        h1 Destructuring
        // Background image from http://www.archdaily.com/512262/gifs-turn-architecture-into-animated-art

      section
        h2 Using ES6 today
        .venn-fine-print Percentages show number of ES6 features supported.
        .venn
          .venn1
            h3 Modern browsers
            p Edge 13 (84%)
            p Firefox 44 (74%)
            p Chrome 48 (65%)
            p Safari 9 (54%)
          .venn2
            h3 Compilers
            p Babel (71%)
            p Traceur (59%)
          .venn3
            h3 Polyfills
            p core-js (included with Babel)
            p es6-shim (17%)
        // ES6 coverage stats sourced from <a href="https://kangax.github.io/compat-table/es6/">https://kangax.github.io/compat-table/es6/</a> on 16 November 2015.

      section
        h2 Using ES6 today
        .venn
          .venn1
            h3 Modern browsers
            p Object proxies
            p let/const
            p Symbols
          .venn2
            h3 Compilers
            p Destructuring
            p Default function parameters
          .venn3
            h3 Polyfills
            p Promises
            p new methods on Math, Array, etc

        // To get the full benefits of ES6 you need to use the latest browsers.
        // But we don't usually have that luxury.
        // Fortunately, compilers and polyfills are pretty good too.

        // Compilers and polyfills actually support some features even better than the browsers.
        // Some nice things about using Destructuring:
        // - Support in Babel is pretty much complete (the only reason its not 100% is because destructuring can be used in combination with other ES6 features)
        // - There is no performance hit. Destructuing assignments written in ES6 and compiled to ES5 will run just as fast as your original ES5.

      section
        h2 Babel in Middleman
        h3 <a href="https://github.com/vast/middleman-es6">https://github.com/vast/middleman-es6</a>
        ul
          li A Middleman (Sprockets) extension
          li Uses official Ruby-Babel bridge
          li Just change the extension of any applicable JS files to .js.es6

      section
        h2 Destructuring arrays<br>[] = [];

      section
        pre
          code.language-javascript.
            var contact = [
              'http://www.deloitte.com',
              '550 Bourke Street, Melbourne',
              '+61 3 9671 7000'
            ];

            // ES5
            var url = contact[0],
              address = contact[1],
              phone = contact[2];

            // ES6
            var [url, address, phone] = contact;
        // - more concise
        // - easier to read
  
      section
        h2 Rest pattern
        pre
          code.language-javascript.
            var contact = [
              'http://www.deloitte.com',
              '550 Bourke Street, Melbourne',
              '+61 3 9671 7000',
              'facebook.com/DeloitteAustralia',
              '@green_dot'
            ];
            var [url, address, phone, ...rest] = contact;
            console.log(rest);
            // ['facebook.com/DeloitteAustralia', '@green_dot']

      section
        h2 Swap two variables
        // Bit of a gimmick really
        pre
          code.language-javascript.
            var fruit = 'zucchini',
              vegetable = 'apple';

            // ES5
            var temp = fruit;
            fruit = vegetable;
            vegetable = temp;
            delete temp;

            // ES6
            [fruit, vegetable] = [vegetable, fruit];

      section
        h2 Nested arrays
        pre.small-code
          code.language-javascript.
            // ES5
            var ageGroups = [
              ['18-35', [20, 15]],
              ['35-50', [34, 30]],
              ['50-65', [26, 28]],
              ['65+', [20, 27]]
            ];
            ageGroups.forEach(function(group) {
                var label = group[0],
                  today = group[1][0],
                  future = group[1][1];
                console.log(label, today, future);
            });

      section
        h2 Nested arrays
        pre
          code.language-javascript.
            // ES6
            var ageGroups = [
              ['18-35', [20, 15]],
              ['35-50', [34, 30]],
              ['50-65', [26, 28]],
              ['65+', [20, 27]]
            ];
            ageGroups.forEach(function([label, [today, future]]) {
              console.log(`The ${label} age group makes up
              ${today}% today, and ${future}% in the future`);
            });
        // Show demo in FF
        // Show Babel compilation

      section
        h2 Destructuring objects<br>{} = {};

      section
        h2 Destructuring objects
        pre.bullet
          code.language-javascript.
            var data = { fruit: 'apple', vegetable: 'zucchini' };
        pre.bullet
          code.language-javascript.
            var { fruit, vegetable } = data;
        pre.bullet
          code.language-javascript.
            var { fruit: f, vegetable: v } = data;
        // Show in Firefox

      section
        h2 Default values
        pre.bullet
          code.language-javascript.
            var data = { fruit: 'apple' };
        pre.bullet
          code.language-javascript.
            var { fruit: f, vegetable: v = 'potato' } = data;
        pre.bullet
          code.language-javascript.
            var {
              fruit: f,
              vegetable: v = 'potato'
            } = data;
        // The default is used when the value is undefined.

      section
        h2 Destructuring in function parameters
        pre.bullet
          code.language-javascript.
            var callServer = function({ url, method = 'GET' }) {
              console.log(`Make ${method} call to ${url}`);
            };

            callServer({ url: '/transactions' });

      section
        h2 Nested objects
        pre.bullet
          code.language-javascript.
            var drawCircle = function ({
              point: {
                x: pointX = 10,
                y: pointY = 10
              } = {},
              radius = 25
            }) {
              console.log(pointX, pointY, radius);
            };

            drawCircle({
              point: { x: 20, y: 20 },
              radius: 35
            });

            drawCircle({
              point: { x: 20 },
              radius: 35
            });

            drawCircle({
              radius: 35
            });

      section
        h2 Resources
        ul
          li <a href="https://kangax.github.io/compat-table/es6/">ES6 compatibility table</a>
          li <a href="http://babeljs.io/">Babel (compiler)</a>
          li <a href="https://github.com/vast/middleman-es6">Middleman ES6</a>

    script(src='build/build.js')
